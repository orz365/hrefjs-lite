const json2param=function(a){const r=[];for(const s in a)Array.isArray(a[s])?a[s].forEach((a=>{r.push(`${s}=${a}`)})):r.push(s+"="+a[s]);return r.join("&")},param2json=function(a){const r={};if(a){a.split("&").forEach((function(a){const s=a.split("="),o=decodeURIComponent(s[0]),n=decodeURIComponent(s[1]);r[o]?Array.isArray(r[o])?r[o].push(n):r[o]=[r[o],n]:r[o]=n}))}return r},revert=function(a){const r=a.protocol,s=a.hostname,o=a.port;return r+"//"+s+(""===o?"":":"+o)+a.pathname+(""===json2param(a.searchParams)?"":"?"+json2param(a.searchParams))+"#"+a.hashPath+(""===json2param(a.hashSearchParams)?"":"?"+json2param(a.hashSearchParams))};var urlUtils={revert:revert,json2param:json2param,param2json:param2json};function Hrefjs(a){const r=a.match(/^(.+)\/\/(?:([^@]+)@)?([^:/?#]+)(?::(\d+))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?$/),s={href:a,protocol:r[1],username:r[2]?r[2].split(":")[0]:void 0,password:r[2]?r[2].split(":")[1]:void 0,hostname:r[3],port:r[4]||"",pathname:r[5],search:r[6]||"",hash:r[7]||""};if(s.searchParams=urlUtils.param2json(s.search),s.searchJson=s.searchParams,s.hash){const a=s.hash.split("?"),r=a[0],o=a[1];s.hashPath=r,s.hashSearch=o,o&&(s.hashSearchParams=urlUtils.param2json(o),s.hashSearchJson=s.hashSearchParams)}return s.toString=function(){return urlUtils.revert(this)},s}Hrefjs.json2param=urlUtils.json2param,Hrefjs.param2json=urlUtils.param2json;export{Hrefjs as default};